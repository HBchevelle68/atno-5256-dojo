#!/bin/bash

function step1
{
	BCMD=($BASH_COMMAND)
	if [ "${BCMD[0]}" != "/challenge/pwn" ]
	then
		fold -s <<< "You must first call the '/challenge/pwn' command, not '$BASH_COMMAND'!"
		trap "" exit
		exit 1
	fi
}

function step2
{
	if [ ! -f /tmp/.pwn ]
	then
		fold -s <<< "It looks like '/challenge/pwn' did not run correctly..."
		trap "" exit
		exit 2
	fi

	BCMD=($BASH_COMMAND)
	if [ "${BCMD[0]}" != "/challenge/college" ]
	then
		fold -s <<< "You must call the '/challenge/college' command, not '$BASH_COMMAND', as your second command!"
		trap "" exit
		exit 3
	fi
}

function step3
{
	BCMD=($BASH_COMMAND)
	if [ "${BCMD[0]}" != "/challenge/college" ] # unhinged special case where the debug trap is yolo-called at the end wtf
	then
		fold -s <<< "I appreciate the enthusiasm, but you can stop after the second command! Instead, you're trying to run '$BASH_COMMAND'..."
		trap "" exit
		exit 4
	fi
	trap "" debug
}

STEP_IDX=0
function dbg
{
	((STEP_IDX++))
	step$STEP_IDX
	return $?
}


function final
{
	if [ ! -f "/tmp/.college" ]
	then
		fold -s <<< "It looks like '/challenge/challenge' did not run correctly..."
		trap "" exit
		exit 2
	fi

	fold -s <<< "Great job, you've written your first shell script! Here is the flag:"
	cat /tmp/.$FLA-$FLB
}

unset BASH_ENV
trap final exit
trap dbg debug
